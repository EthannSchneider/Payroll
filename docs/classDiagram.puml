@startuml

skinparam classAttributeIconSize 0

'packages
package "Controllers"
{
    class EmployeeController{
        -repository : EmployeeRepository
        +all() : List<Employee>
        +newEmployee(Employee newEmployee) : Employee
        +one(Long id) : Employee
        +replaceEmployee(Employee newEmployee, Long id) : Employee
        +deleteEmployee(Long id) : void
    }
    class EmployeeNotFoundAdvice{
        +employeeNotFoundHandler(EmployeeNotFoundException) : String
    }
    class EmployeeNotFoundException{
        +EmployeeNotFoundException(Long id)
    }
    class DepartementController{
        -repository : DepartementRepository
        +all() : List<Departement>
        +newDepartement(Departement newDepartement) : Departement
        +one(Long id) : Departement
        +replaceDepartement(Departement newDepartement, Long id) : Departement
        +deleteDepartement(Long id) : void
    }
    class DepartementNotFoundException{
        +DepartementNotFoundException(Long id)
    }
}

package "Entities"
{
    class Employee{
        -id : Long
        -name : String
        -role : String
        -email : String
        -departement : Departement
        +Employee()
        +Employee(String name, String role, String email)
        +Employee(String name, String role, String email, Departement departement)
        +getID() : Long
        +setId(Long id) : void
        +getName() : String
        +setName(String name) : void
        +getRole() : String
        +setRole(String role) : void
        +getEmail() : String
        +setEmail(String email) : void
        +getDepartement() : Departement
        +setDepartement(Departement departement) : void
    }
    class Departement{
        -id : Long
        -name : String
        -employees : List<Employee>
        +Departement()
        +Departement(String name)
        +getId() : Long
        +setId(Long id) : void
        +getName() : String
        +setName(String name) : void
        +getEmployees() : List<Employee>
    }
}

package "Repositories"
{
    interface EmployeeRepository{}
    interface DepartementRepository{}
}

'relations
EmployeeController --> Employee
EmployeeController --> EmployeeRepository
EmployeeController ..> EmployeeNotFoundException : throws

EmployeeRepository --> Employee : manages

EmployeeController ..> Departement : uses
Employee --> Departement : belongs to

DepartementController --> Departement
DepartementController --> DepartementRepository
DepartementController ..> DepartementNotFoundException : throws

DepartementRepository --> Departement : manages
@enduml